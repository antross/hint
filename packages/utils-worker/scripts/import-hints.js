const fs = require('fs');
const path = require('path');
const pkg = require('../package.json');

const hintModules = Object.keys(pkg.devDependencies).filter((name) => {
    return name.startsWith('@hint/hint-');
});

// Generate hints.import.ts

const hintsPath = path.resolve(`${__dirname}/../src/shared/hints.import.ts`);
const hints = `// autogenerated by scripts/import-hints.js

import { IHintConstructor } from 'hint/dist/src/lib/types';

const resolve = (module: any): IHintConstructor => {
    return module.default || module;
};

const hints = [
${
    hintModules.map((name) => {
        return `    ...Object.values(require('${name}')).map(resolve)`;
    }).join(',\n')
}
];

export default hints;
`;

fs.writeFile(hintsPath, hints, (err) => {
    if (err) {
        throw err;
    } else {
        console.log(`Created: ${hintsPath}`);
    }
});

// Generate metas.imports.ts

const metasPath = path.resolve(`${__dirname}/../src/shared/metas.import.ts`);
const metas = `// autogenerated by scripts/import-hints.js

import { HintMetadata } from 'hint/dist/src/lib/types';

const resolve = (module: any): HintMetadata => {
    return module.default || module;
};

const metas = [
${
    hintModules.map((name) => {
        return `    ...Object.values(require('${name}/dist/src/meta')).map(resolve)`;
    }).join(',\n')
}
];

export default metas;
`;

fs.writeFile(metasPath, metas, (err) => {
    if (err) {
        throw err;
    } else {
        console.log(`Created: ${metasPath}`);
    }
});
